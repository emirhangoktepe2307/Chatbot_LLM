{
    "Ticket ID": [
        "001", "002", "003", "004", "005", "006", "007", "008", "009", "010",
        "011", "012", "013", "014", "015", "016", "017", "018", "019", "020",
        "021", "022", "023", "024", "025", "026", "027", "028", "029", "030",
        "031", "032", "033", "034", "035", "036", "037", "038", "039", "040"
    ],

    "Soru Başlığı": [
        "Lojistik Regresyon",
        "Lineer Regresyon",
        "Polinom Regresyon",
        "Ridge Regresyon",
        "Lasso Regresyon",
        "Elastic-Net Regresyon",
        "Makina Öğrenmesi",
        "Derin Öğrenme",
        "Denetimli Öğrenme",
        "Denetimsiz Öğrenme",
        "KNN",
        "Confusion Matrix",
        "One-hot Encoding",
        "Label Encoding",
        "Logaritmik Dönüşüm",
        "Min-Max Scaling",
        "Z-Score Scaling",
        "Robust Scaling",
        "Random Forest",
        "Scikit-learn",
        "Yapay Zeka",
        "Python Kütüphaneleri",
        "Makine Öğrenmesi Temelleri",
        "Veri Analizi",
        "Denetimli Öğrenme Temelleri",
        "Yapay Sinir Ağları",
        "Model Eğitimi",
        "Görselleştirme",
        "Doğrusal Regresyon",
        "Epoch",
        "TensorFlow",
        "Veri Önemi",
        "Veri Bölme",
        "Sınıflandırma",
        "Aktivasyon Fonksiyonu",
        "Overfitting",
        "Veri Ön İşleme",
        "Doğruluk",
        "Keras",
        "Model Eğitimi"
    ],

    "Sorular": [
        "Lojistik regresyon nedir ve ne zaman kullanmalıyım?",
        "Veri setimde doğrusal ilişkileri yakalamak için hangi regresyon problemini kullanmalıyım?",
        "Veri setimde ilişkileri yakalamak için lineer regresyon kullandım fakat kötü sonuçlar çıkardı, Hangi yöntemi kullanmalıyım?",
        "Çoklu doğrusal bağlantıyı azaltırken katsayıları sıfırlamadan cezalandırmayı nasıl yapabilirim?",
        "Çoklu doğrusal bağlantıyı azaltırken katsayıları sıfırlayarak cezalandırmayı nasıl yapabilirim?.",
        "Elastic Net'in Lasso ve Ridge regresyondan farkı nedir ve ne zaman tercih edilmelidir?",
        "Makine öğrenmesi nedir ve nerelerde kullanılır?",
        "Yapay sinir ağları (ANN) nedir ve bu konu üstünde çalışmak istiyorum. Hangi öğrenme modelini çalışmalıyım?",
        "Veri setinde bulunan hedef değişkeni tahminlemek için makine öğreniminde hangi öğrenme modelini kullanmalıyım?",
        "Veri setim çok karışık ve bir makina öğrenmesi modeli geliştirmek istiyorum hangi yolu kullanmalıyım?",
        "KNN algoritması nedir kısa bilgiler verebilir misin?",
        "Confusion Matris neden kullanılır?",
        "Kategorik verileri nominal şekilde sayısallaştırmak için hangi yöntemi kullanmalıyım?",
        "Kategorik verileri ordinal şekilde sayısallaştırmak için hangi yöntemi kullanmalıyım?",
        "Sayısal verilerde çarpıklık varsa çarpıklığı gidermek için ne yapabilirim?",
        "Min-Max scaling nedir?",
        "Z-Score scaling nedir?",
        "Robust scaling nedir?",
        "Random Forest nedir?",
        "Scikit-learn hangi amaçla kullanılır?",
        "Yapay zeka nedir?",
        "Python'da yapay zeka için en çok kullanılan kütüphane nedir?",
        "Makine öğrenmesi nedir?",
        "Python'da veri analizi için kullanılan kütüphaneler nelerdir?",
        "Denetimli öğrenme (supervised learning) nedir?",
        "Yapay sinir ağı nedir?",
        "Python'da makine öğrenmesi modelleri hangi kütüphane ile kolayca oluşturulabilir?",
        "Overfitting nedir?",
        "Yapay zekada kullanılan veri ön işleme adımlarından biri nedir?",
        "Doğruluk (accuracy) neyi ifade eder?",
        "Keras hangi kütüphane üzerine inşa edilmiştir?",
        "Yapay zekada kullanılan 'model eğitimi' (training) nedir?",
        "Python'da grafik çizmek için hangi kütüphane kullanılır?",
        "Doğrusal regresyon (Linear Regression) nedir?",
        "Epoch terimi neyi ifade eder?",
        "Python'da TensorFlow ile bir model nasıl oluşturulur?",
        "Yapay zeka projelerinde neden çok veri önemlidir?",
        "Python'da veri setlerini bölmek için hangi fonksiyon kullanılır?",
        "Yapay zekada sınıflandırma problemi nedir?",
        "Aktivasyon fonksiyonu ne işe yarar?"
    ],

    "Cevaplar": [
        "Lojistik regresyon, bağımlı değişkenin kategorik (çoğunlukla ikili) olduğu durumlarda kullanılan bir sınıflandırma algoritmasıdır. Özellikle bir olayın olma olasılığını modellemek için tercih edilir.",
        "Lineer regresyon, bir bağımlı değişkenin (y çıkışı) bir veya daha fazla bağımsız değişken (x girişi) ile olan doğrusal ilişkiyi modelleyen temel bir makine öğrenmesi ve istatistik yöntemidir. \nVeri setindeki doğrusal ilişkileri yakalamak için lineer regresyon yöntemini kullanmanı öneririm.",
        "Polinom regresyon, doğrusal regresyonun bir uzantısıdır ve veri ile çıktı arasındaki ilişki doğrusal değilse kullanılır. \nVeri dağılımın doğrusal değilse polinom regresyon kullanmak en mantıklı çözüm olacaktır.",
        "Ridge regresyon, lineer regresyona ek bir ceza (penalty) terimi ekleyerek aşırı öğrenmeyi (overfitting) önlemeye çalışan bir regülerizasyon tekniğidir. \nVeri kaybı ve katsayıları sıfırlamak istemiyorsan Ridge Regresyon kullanmalısın.",
        "Lasso regresyon (Least Absolute Shrinkage and Selection Operator), lineer regresyonu L1 regülerizasyon ile güçlendiren bir modeldir. \nAmaç, modelin aşırı öğrenmesini (overfitting) engellemek ve önemli özellikleri seçmektir. \nVeri kayıpların çok önemli değilse ve tahminleme skorlarını etkilemeyecekse Lasso Regresyon kullanabilirsin.",
        "Elastic Net, hem L1 (Lasso) hem de L2 (Ridge) cezalarını birleştiren bir regresyon yöntemidir. \nÇok sayıda açıklayıcı değişken varsa ve aralarında yüksek korelasyon bulunuyorsa kullanmanı tavsiye ederim.",
        "Makine öğrenmesi (ML – Machine Learning), bilgisayarların verilerden öğrenerek açıkça programlanmadan kararlar almasını ya da tahminlerde bulunmasını sağlayan bir yapay zeka (AI) alt dalıdır.",
        "Yapay sinir ağları insan beynindeki sinir hücrelerinden (nöronlardan) esinlenerek geliştirilmiş bir makine öğrenmesi modelidir. \nBu konu üstünde çalışma yapmak için bilmeniz gereken önemli öğrenme modelleri denetimli, denetimsiz ve pekiştirmeli öğrenme modelleridir.",
        "Veri setinde bulunan bir değişkenin üstünde modeli eğitip tahminleme yapmak istiyorsanız makina öğreniminin denetimli öğrenme model eğitimini kullanmalısınız.",
        "Karışık ve zor ilişkiler barındıran bir veri seti ile makina öğrenmesi modeli geliştirmek için denetimsiz öğrenme model eğitimi yolunu kullanmanız daha avantajlı olacaktır.",
        "KNN (K-En Yakın Komşu), hem sınıflandırma hem de regresyonda kullanılan basit ama güçlü bir makine öğrenmesi algoritmasıdır. Yeni bir veri noktası, eğitim verisindeki en yakın K komşusunun çoğunluğuna göre sınıflandırılır veya ortalamasına göre tahmin edilir.",
        "Sınıflandırma problemlerinde modelin performansını değerlendirmek için kullanılan bir araçtır.",
        "Verilerini encoding aşamasında sırasız sayısallaştırmak için One-Hot Encoding işlemini tercih etmeni öneririm.",
        "Verilerini encoding aşamasında sıralı bir şekilde sayısallaştırmak istiyorsan Label Encoding işlemini tercih etmeni öneririm.",
        "Log dönüşümü (log transformation), makine öğrenmesi ve istatistikte özellikle basık verileri daha simetrik (normal dağılıma yakın) hale getirmek için kullanılan yaygın bir tekniktir.",
        "Min-Max scaling veri önişleme adımında ilgili sütunun 0-1 arasında dönüşümünde kullanılan bir tekniktir.",
        "Z-score Scaling bir veriyi ortalama 0 ve standart sapması 1 olacak şekilde dönüştürme işlemidir.",
        "Robust Scaling, verileri medyan ve çeyrekler arası mesafeye (IQR) göre ölçeklendiren bir yöntemdir.",
        "Random Forest, bir ensemble (topluluk) öğrenme yöntemidir ve çok sayıda karar ağacı (decision tree) oluşturarak bunların sonucunu birleştirir.",
        "Scikit-learn, Python ile makine öğrenmesi algoritmalarını uygulamak için kullanılır.",
        "Yapay zeka, insan benzeri zeka davranışlarını taklit edebilen sistemlerin geliştirilmesini amaçlayan bir bilgisayar bilimi dalıdır.",
        "En çok kullanılan kütüphaneler arasında TensorFlow, Keras, Scikit-learn ve PyTorch bulunmaktadır.",
        "Makine öğrenmesi, bilgisayarların verilerden öğrenmesini ve açıkça programlanmadan kararlar almasını sağlayan yapay zeka alt dalıdır.",
        "Pandas ve NumPy veri analizi için en yaygın kullanılan kütüphanelerdir.",
        "Girdi ve çıktının bilindiği verilerle modelin eğitildiği makine öğrenmesi türüdür.",
        "Yapay sinir ağı, insan beynindeki nöronları taklit eden yapay zeka modelleridir.",
        "Scikit-learn kütüphanesi, temel makine öğrenmesi modelleri için çok kullanışlıdır.",
        "Modelin eğitim verisine çok iyi uyum sağlaması ama yeni verilere genelleyememesi durumudur.",
        "Eksik verilerin doldurulması (imputation) veya normalizasyon ön işleme adımlarıdır.",
        "Modelin doğru tahmin ettiği örneklerin toplam örnek sayısına oranıdır.",
        "Keras genellikle TensorFlow üzerine inşa edilmiştir.",
        "Modelin verilerden örüntü öğrenmesi sürecidir.",
        "Matplotlib ve Seaborn yaygın olarak kullanılır.",
        "Bir bağımlı değişken ile bir veya daha fazla bağımsız değişken arasındaki ilişkiyi modelleyen istatistiksel bir yöntemdir.",
        "Tüm eğitim verisinin bir kez modelden geçirilmesidir.",
        "`Sequential()` sınıfı ile katmanlar tanımlanarak model oluşturulabilir.",
        "Modelin daha doğru öğrenebilmesi ve genelleme yapabilmesi için büyük ve kaliteli veri gereklidir.",
        "`train_test_split()` fonksiyonu Scikit-learn içinde kullanılır.",
        "Verilerin belirli kategorilere veya etiketlere ayrılması gereken problemdir.",
        "Nöronun çıktısını hesaplar ve ağın doğrusal olmayan problemleri öğrenmesini sağlar."
    ],

    "Keywords": [
    ["lojistik", "regresyon", "sınıflandırma", "logistic", "binary", "sigmoid", "olasilik", "ikili", "0-1"],
    ["lineer", "regresyon", "doğrusal", "linear", "model", "kestirim", "r2", "hata kare", "least squares"],
    ["polinom", "regresyon", "eğri", "nonlineer", "polynomial", "fit", "higher order", "doğrusal olmayan"],
    ["ridge", "regresyon", "cezalandırma", "regularizasyon", "l2", "overfitting", "katsayı", "penalty"],
    ["lasso", "regresyon", "sıfırlama", "L1", "özellik seçimi", "sparse", "regularizasyon", "ceza"],
    ["elastic", "net", "regresyon", "lasso", "ridge", "l1", "l2", "karma", "regularizasyon", "ceza"],
    ["makine", "öğrenme", "machine learning", "model", "veri", "eğitim", "tahmin", "algoritma", "ml"],
    ["derin", "öğrenme", "deep learning", "katman", "nöron", "ağ", "yapay zeka", "ann", "dl"],
    ["denetimli", "öğrenme", "supervised", "etiketli veri", "tahmin", "sınıflandırma", "regresyon"],
    ["denetimsiz", "öğrenme", "unsupervised", "etiketsiz", "kümeleme", "boyut indirgeme", "clustering"],
    ["knn", "k-en yakın", "komşu", "sınıflandırma", "regresyon", "benzerlik", "mesafe", "öklid"],
    ["confusion", "matrix", "karmaşıklık matrisi", "true positive", "precision", "recall", "f1", "sınıflandırma"],
    ["one-hot", "encoding", "kategorik", "nominal", "sayısallaştırma", "dönüşüm", "binary encoding"],
    ["label", "encoding", "ordinal", "etiketleme", "sıralı", "sayı", "dönüşüm"],
    ["log", "logaritmik", "dönüşüm", "çarpıklık", "skewness", "normalizasyon", "log transform"],
    ["min-max", "scaling", "ölçekleme", "normalleştirme", "0-1", "feature scaling"],
    ["z-score", "standartlaştırma", "ölçekleme", "normalize", "standardization", "mean", "std"],
    ["robust", "scaling", "ölçekleme", "medyan", "IQR", "aykırı değer", "dirençli"],
    ["random", "forest", "ensemble", "karar ağacı", "bootstrap", "bagging", "özellik seçimi", "rf"],
    ["scikit-learn", "sklearn", "python", "makine öğrenmesi", "modelleme", "kütüphane", "ml"],
    ["yapay zeka", "ai", "artificial intelligence", "makine öğrenmesi", "derin öğrenme"],
    ["python", "kütüphane", "tensorflow", "keras", "scikit-learn", "pytorch"],
    ["makine öğrenmesi", "machine learning", "veri", "algoritma", "model"],
    ["veri analizi", "pandas", "numpy", "data analysis", "dataframe"],
    ["denetimli öğrenme", "supervised learning", "etiketli veri", "sınıflandırma"],
    ["yapay sinir ağı", "neural network", "nöron", "katman", "derin öğrenme"],
    ["scikit-learn", "scikit learn","model", "makine öğrenmesi", "python", "kütüphane"],
    ["overfitting", "aşırı öğrenme", "genelleme", "model performansı"],
    ["veri ön işleme", "data preprocessing", "normalizasyon", "imputation"],
    ["doğruluk", "accuracy", "model performansı", "metrik", "değerlendirme"],
    ["keras", "tensorflow", "derin öğrenme", "neural network", "model"],
    ["model eğitimi", "training", "öğrenme", "parametre", "optimizasyon"],
    ["görselleştirme", "matplotlib", "seaborn", "plot", "grafik"],
    ["doğrusal regresyon", "linear regression", "tahmin", "model", "istatistik"],
    ["epoch", "iterasyon", "eğitim", "batch", "öğrenme"],
    ["tensorflow", "model", "keras", "derin öğrenme", "neural network"],
    ["veri", "data", "büyük veri", "kalite", "önem"],
    ["veri bölme", "train test split", "veri seti", "eğitim", "test"],
    ["sınıflandırma", "classification", "kategori", "etiket", "tahmin"],
    ["aktivasyon fonksiyonu", "activation function", "nöron", "çıktı", "nonlinear"]
]

} 